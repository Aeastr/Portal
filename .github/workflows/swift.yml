name: Test Swift Package on iOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Swift 6.0 on iOS (${{ matrix.config }})
    runs-on: macos-latest # iOS testing requires macOS

    strategy:
      matrix:
        config: [debug, release]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Select Xcode 16.2 with iOS simulator
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'
        components: |
          Simulator - iOS 18.2

    - name: Setup Swift 6.0
      uses: SwiftyLab/setup-swift@latest
      with:
        swift-version: '6.0' # Use quotes to ensure correct version parsing

    - name: Check Swift version
      run: swift --version

    - name: Find an iOS Simulator
      id: find_simulator
      run: |
        # Find the latest available iOS simulator runtime that actually has devices
        RUNTIME_ID=$(xcrun simctl list runtimes --json |
          jq -r '.runtimes
            | map(select((.identifier | test("\.iOS-")) and (.isAvailable == true)))
            | sort_by(.version)
            | reverse
            | .[0].identifier')
        if [ -z "$RUNTIME_ID" ] || [ "$RUNTIME_ID" == "null" ]; then
          echo "::error::No iOS runtime found."
          exit 1
        fi

        DEVICE_ID=$(xcrun simctl list devices --json |
          jq -r --arg RT_ID "$RUNTIME_ID" '.devices[$RT_ID]
            | map(select(.isAvailable == true and (.name | test("^iPhone"))))
            | .[0].udid')
        if [ -z "$DEVICE_ID" ] || [ "$DEVICE_ID" == "null" ]; then
          echo "::error::No available iPhone simulator found for runtime $RUNTIME_ID."
          exit 1
        fi

        echo "Found iOS Simulator Runtime: $RUNTIME_ID"
        echo "Found iPhone Simulator Device UDID: $DEVICE_ID"
        echo "SIMULATOR_DESTINATION=platform=iOS Simulator,id=$DEVICE_ID" >> "$GITHUB_OUTPUT"

    - name: Build and Test (${{ matrix.config }})
      run: |
        echo "Using simulator destination: ${{ steps.find_simulator.outputs.SIMULATOR_DESTINATION }}"
        xcodebuild build -scheme Portal -sdk $(xcrun --sdk iphonesimulator --show-sdk-path) -destination "${{ steps.find_simulator.outputs.SIMULATOR_DESTINATION }}" SWIFT_VERSION=6.0
